/****************************************************************************
 *   FileName    : SHA256.h
 *   Description :
 ****************************************************************************
*
*   Copyright (c) Nowada, Inc.
*   ALL RIGHTS RESERVED
*
*	Created: 2011-11-28
*  	Author: Jackson Meng
****************************************************************************/

#ifndef SHA2_H
#define SHA2_H

#define SHA224_DIGEST_SIZE ( 224 / 8)
#define SHA256_DIGEST_SIZE ( 256 / 8)

#define SHA256_BLOCK_SIZE  ( 512 / 8)
#define SHA224_BLOCK_SIZE  SHA256_BLOCK_SIZE

typedef struct {
    UINT32 tot_len;
    UINT32 len;
    UINT8 block[2 * SHA256_BLOCK_SIZE];
    UINT32 h[8];
} sha256_ctx;

//////////////////////////////////////////////////////////////////////////
const static UINT8 GPC_BUF [16][8] =
{
{0xB5, 0xD5, 0x0A, 0x6C, 0xE5, 0xDA, 0x8B, 0xB6},
{0x64, 0x37, 0x90, 0x82, 0xC5, 0x06, 0x88, 0xFE},
{0xD6, 0x7E, 0xD0, 0xE0, 0x03, 0x4A, 0x86, 0x2C},
{0xA2, 0x28, 0x4B, 0xFD, 0x71, 0xEE, 0x00, 0x85},
{0xFC, 0x1B, 0x70, 0x22, 0xBA, 0x24, 0x4A, 0xC2},
{0xC6, 0xC3, 0xDB, 0x0E, 0x6C, 0x34, 0x93, 0x3F},
{0xF3, 0xBB, 0x5C, 0x6D, 0x33, 0x50, 0x24, 0x70},
{0x63, 0x9E, 0x86, 0xA2, 0x9E, 0x1B, 0xB2, 0x1B},
{0x72, 0xE3, 0x8D, 0xAC, 0x4A, 0xDD, 0x6D, 0x37},
{0x9F, 0xEA, 0x43, 0x9A, 0x2C, 0x09, 0x81, 0xFD},
{0x7D, 0x92, 0x4E, 0x5E, 0x37, 0x37, 0x64, 0x9C},
{0x7B, 0xC9, 0x01, 0x42, 0xAD, 0xDC, 0x8B, 0x2B},
{0xE8, 0xDF, 0x66, 0xF9, 0xCB, 0x9F, 0x4F, 0xEE},
{0x50, 0x60, 0x40, 0x99, 0xF0, 0x7A, 0x1D, 0x6B},
{0x79, 0x03, 0x39, 0x9F, 0x2C, 0xE9, 0xAB, 0xD4},
{0x4A, 0x85, 0x49, 0xE7, 0x5A, 0x96, 0xA3, 0x7E}

};
//////////////////////////////////////////////////////////////////////////
void SHA256_init(sha256_ctx * ctx);
void SHA256_update(sha256_ctx *ctx, const UINT8 *message, UINT32 len);
void SHA256_final(sha256_ctx *ctx, UINT8 *digest);

void SHA256_noPad(sha256_ctx *ctx, UINT8 *digest);

void SHA256(const UINT8 *message, UINT32 len, UINT8 *digest);

#endif /* !SHA2_H */

